# Generated by Django 5.2.3 on 2025-06-24 15:40

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensor_type', models.CharField(max_length=50)),
                ('current_value', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(max_length=100)),
                ('first_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('status', models.CharField(max_length=50)),
                ('role', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_details', models.TextField()),
                ('task_deadline', models.DateField()),
                ('detail', models.TextField()),
                ('notified_users', models.ManyToManyField(related_name='alerts_notified', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fill_level', models.FloatField()),
                ('date_time', models.DateTimeField()),
                ('triggered_alert', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='triggering_measurement', to='main.alert')),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='measurements', to='main.sensor')),
            ],
        ),
        migrations.CreateModel(
            name='TrashCan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=50)),
                ('location', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=100)),
                ('last_emptied', models.DateTimeField()),
                ('capacity', models.FloatField()),
                ('managers', models.ManyToManyField(related_name='managed_trashcans', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_type', models.CharField(max_length=100)),
                ('scheduled_date', models.DateField()),
                ('status', models.CharField(max_length=50)),
                ('trashcans', models.ManyToManyField(related_name='assigned_tasks', to='main.trashcan')),
            ],
        ),
        migrations.AddField(
            model_name='sensor',
            name='trashcan',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sensor', to='main.trashcan'),
        ),
        migrations.CreateModel(
            name='Verification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_verification', models.DateTimeField()),
                ('total_verifications', models.IntegerField()),
                ('trashcan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='verifications', to='main.trashcan')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='verifications_done', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
